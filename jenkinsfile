pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                // Build the code using Maven
                echo "mvn cleaned package"
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Run unit tests using JUnit
                echo "mvn cleaned package"
                // Run integration tests using Selenium or Postman
                // Add appropriate commands here
            }
        }
        stage('Code Analysis') {
            steps {
                // Integrate code analysis tool (e.g., SonarQube)
                // Add appropriate commands here
                echo "mvn cleaned package"
            }
        }
        stage('Security Scan') {
            steps {
                // Perform security scan using OWASP ZAP or Nessus
                // Add appropriate commands here
                echo "mvn cleaned package"
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Deploy to staging server (e.g., AWS EC2 instance) using deployment scripts or AWS CodeDeploy
                // Add appropriate commands here
                echo "mvn cleaned package"
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on staging environment
                // Add appropriate commands here
                echo "mvn cleaned package"
            }
        }
        stage('Deploy to Production') {
            steps {
                // Deploy to production server (e.g., AWS EC2 instance) using deployment scripts or AWS CodeDeploy
                // Add appropriate commands here
                echo "mvn cleaned package"
            }
        }
    }
    beforeBuild {
            // Archive log files before the build starts
            archiveArtifacts artifacts: '**/*.log', onlyIfSuccessful: true
        }
    post {
        success {
            script {
                // Send email notification with attachments
                emailext body: "The build completed successfully.",
                          subject: "Build Success",
                          to: "purvasha1013@gmail.com",
                          attachmentsPattern: '**/*.log' // Attach all archived log files
            }
        }
    }

    
}
